name: Create Requirements
on:
  issues:
    types: [opened]
jobs:
  create_requirements:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      final_message: ${{ steps.run_codex.outputs.final-message }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Create Requirements Document
        id: run_codex
        uses: openai/codex-action@v1
        with:
          openai-api-key: ${{ secrets.OPENAI_API_KEY }}
          prompt: |
            This is issue #${{ github.event.issue.number }} for ${{ github.repository }}.

            Convert the issue content below into a structured requirement document format.

            Issue title: ${{ github.event.issue.title }}
            Issue body:
            ----
            ${{ github.event.issue.body }}
            ----

            Please transform this into the following format:

            > [!NOTE]
            > Generated by AI.

            # Requirements Document

            Created: ${{ github.event.issue.created_at }} Last Updated: ${{ github.event.issue.updated_at }}

            ## Requirements (To-Be)

            <!--
            Convert the requirements into a table format:

            |       ID       |     Requirement    |
            | -------------- | ------------------ |
            | R001           | [First requirement]   |
            | R002           | [Second requirement]  |

            - Extract all requirements from the issue
            - Number them sequentially as R001, R002, R003, etc.
            - Be specific and concise
            -->

            Guidelines:
            - Extract the main purpose/objective and place it in the Purpose section
            - Identify all requirements and list them in the table with sequential IDs
            - Format dates as YYYY-MM-DD
            - Generate the entire document in the same language as the issue content (including headers, labels, and all text)
            - Detect the language of the issue and use that language for the entire document
  update_issue:
    runs-on: ubuntu-latest
    needs: create_requirements
    permissions:
      issues: write
    steps:
      - run: gh issue edit $ISSUE_NUMBER --body "$CODEX_FINAL_MESSAGE" --add-label "$LABELS" --repo "$REPO"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ISSUE_NUMBER: ${{ github.event.issue.number }}
          CODEX_FINAL_MESSAGE: ${{ needs.create_requirements.outputs.final_message }}
          LABELS: doc-type:requirements,doc-state:draft
          REPO: ${{ github.repository }}
